# Day Seven

# Building a Hangman Game
# Step 1 

# To Do 1 - Randomly choose a word from the word_list and assign it to a variable called chosen_word.

# To Do 2 - Ask the user to guess a letter and assign their answer to a variable called guess. Make guess lowercase.

# To Do 3 - Check if the letter the user guessed (guess) is one of the letters in the chosen_word.

word_list = ["aardvark", "baboon", "camel"]

import random

word = str(random.choice(word_list))

#print(word)

chosen_word = list(word)

guess = input("Choose a letter:\n").lower()

for letter in chosen_word:
  if guess in letter:
    print(True)
  if guess not in letter:
    print(False)
    
# Step 2

# To do 1: - Create an empty List called display. For each letter in the chosen_word, add a "_" to 'display'.

# To do 2: - Loop through each position in the chosen_word;
# If the letter at that position matches 'guess' then reveal that letter in the display at that position.

#To do 3: - Print 'display' and you should see the guessed letter in the correct position and every other letter replace with "_".

display = []
for blank in range(len(chosen_word)):
        display += "_"
        
for position in range(len(chosen_word)):
  letter = chosen_word[poisition]
  if letter == guess:
     display[position] = letter
  
print(display)  

# Step 3

# To do 1: - Use a while loop to let the user guess again. The loop should only stop once the user has guessed all the letters in the chosen_word and 'display' has no more blanks ("_"). 
# To do 2: -Then you can tell the user they've won.

while "_" in display:
  guess = input("Guess a letter: ").lower()
#Check guessed letter
  for position in range(word_length):
      letter = chosen_word[position]
      if letter == guess:
        display[position] = letter
  print(display)

print("You've Won!")

# Step 4

# To do 1: Create a variable called 'lives' to keep track of the number of lives left. Set 'lives' to equal 6.

# To do 2: - If guess is not a letter in the chosen_word. Then reduce 'lives' by 1. 
# If lives goes down to 0 then the game should stop and it should print "You lose."

# To do 3: - Print the ASCII art from 'stages' that corresponds to the current number of 'lives' the user has remaining.

stages = ['''
  +---+
  |   |
  O   |
 /|\  |
 / \  |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
 /    |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|\  |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
 /|   |
      |
      |
=========''', '''
  +---+
  |   |
  O   |
  |   |
      |
      |
=========
''', '''
  +---+
  |   |
  O   |
      |
      |
      |
=========
''', '''
  +---+
  |   |
      |
      |
      |
      |
=========
''']

if guess not in chosen_word:
        lives -= 1
       
 if lives == 0:
        end_of_game = True
        print("You lose.")
 
 print(stages[lives])
 
 
